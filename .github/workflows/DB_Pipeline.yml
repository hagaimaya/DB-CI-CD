# This is a basic workflow to help you get started with Actions

name: DB_Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  dacpacArtifactName: dacpac
  dacpacFileName: HagaiDataBase.dacpac
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      projectPath: HagaiDataBase/HagaiDataBase.sqlproj
      outputDirectory: HagaiDataBase/bin/Release
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore ${{env.projectPath}} 
      - name: Build
        run: dotnet build /p:NetCoreBuild=true ${{env.projectPath}} --configuration Release 
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ${{env.dacpacArtifactName}}
          path: ${{env.outputDirectory}}
          if-no-files-found: error
  Sandbox:
    runs-on: [self-hosted, Linux]
    needs: build
    environment: Sandbox
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: ${{env.dacpacArtifactName}}
        path: ${{env.dacpacArtifactName}}
    - name: Deploy
      run: /home/hagai/sqlpackage/sqlpackage /a:Publish /SourceFile:${{env.dacpacArtifactName}}/${{env.dacpacFileName}} /TargetDatabaseName:${{secrets.SQL_DATABASE_NAME}} /TargetUser:${{secrets.SQL_USERNAME}} /TargetPassword:"${{secrets.SQL_SERVER_NAME}}" /TargetServerName:${{secrets.SQL_PASSWORD}} 
        
